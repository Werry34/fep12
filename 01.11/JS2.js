//"use strict";
//Возьмите решение предыдущей задачи Выведите alert и вынесите скрипт во внешний файл alert.js, который расположите в той же директории.
//Откройте страницу и проверьте, что вывод сообщения всё ещё работает.
//alert('JavaScript!')
//
//
//В примере ниже подключены два скрипта small.js и big.js.
//Если предположить, что small.js загружается гораздо быстрее, чем big.js – какой выполнится первым?
//
//<script src="big.js"></script>
//<script src="small.js"></script>
//Первым выполнится big.js, это нормальная последовательность выполнения подряд идущих скриптов.
//
//А вот так?
//    
//<script async src="big.js"></script>
//<script async src="small.js"></script>
//Первым выполнится small.js, так как скрипты из-за async ведут себя совершенно независимо друг от друга, страница тоже от них не зависит.
//
//А так?
//<script defer src="big.js"></script>
//<script defer src="small.js"></script>
//Первым выполнится big.js, так как скрипты, подключённые через defer, сохраняют порядок выполнения относительно друг друга.
//
//
//
//Объявите две переменные: admin и name. Запишите в name строку "Василий".
//Скопируйте значение из name в admin. Выведите admin (должно вывести «Василий»).
//var admin, name;
//name = "Василий";
//admin = name;
//alert(admin);
//
//
//
//Создайте переменную для названия нашей планеты и присвойте ей значение "Земля". Правильное имя выберите сами.
//Создайте переменную для имени посетителя со значением "Петя". Имя также на ваш вкус.
//var ourPlanetTitul = "Земля";
//var VisiterName = "Петя";
//alert(ourPlanetTitul, VisiterName);
//
//
// Чему будет равен x в примере ниже?
//var a = 2;
//var x = 1 + (a *= 2);
//alert(x); // Will be  5